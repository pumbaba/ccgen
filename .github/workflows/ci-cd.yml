name: CI/CD Pipeline

# Trigger the workflow on push and pull request events
on:
  push:
    branches: ["**"]
    tags: ["v*"]
  pull_request:
    branches: ["main"]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository_owner }}/ccgen-api

jobs:
  # Test job runs on all events (branch pushes, tag pushes, and pull requests)
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Run tests
        run: |
          cd api
          docker-compose -f docker-compose.test.yml up --build --exit-code-from test
        env:
          OPENAI_API_KEY: ${{ secrets.TEST_OPENAI_API_KEY }}

  # Deploy job only runs on tag pushes and depends on successful test
  deploy:
    name: Build and Deploy
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-production
      cancel-in-progress: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=long

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./api
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Deploy to Railway
      - name: Install Railway CLI
        run: |
          curl -fsSL https://railway.app/install.sh | sh

      - name: Deploy to Railway
        run: |
          cd api
          railway up --service ccgen-api
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Update deployment status
        run: |
          echo "ðŸš€ Successfully deployed version $(echo ${{ github.ref_name }} | sed 's/^v//') to Railway"
